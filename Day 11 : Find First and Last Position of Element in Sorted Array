import java.util.ArrayList;

class IndexRange {
    int first;
    int second;
}

public class Solution {
    public static IndexRange findFirstLastPosition(ArrayList<Integer> arr, int n, int x) {
        IndexRange ans = new IndexRange();
        ans.first = -1;
        ans.second = -1;

        for (int i = 0; i < n; i++) {
            if (arr.get(i) == x) {
                ans.first = i;
                break;
            }
        }

        for (int i = n - 1; i >= 0; i--) {
            if (arr.get(i) == x) {
                ans.second = i;
                break;
            }
        }

        return ans;
    }

    public static int[] searchRange(int[] nums, int target) {
        int first = -1;
        int last = -1;
        
        int left = 0;
        int right = nums.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (nums[mid] == target) {
                first = mid;
                right = mid - 1;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        
        left = 0;
        right = nums.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (nums[mid] == target) {
                last = mid;
                left = mid + 1;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        
        return new int[] { first, last };
    }
}
